mut <- read.delim("../data/TCGA-OV.mutect2_snv.tsv", as.is = T)
head(mut)
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl") #uses human ensembl annotations
#gets gene symbol, transcript_id and go_id for all genes annotated with GO:0007507
gene.data <- getBM(attributes=c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go_id', values = 'GO:0005739', mart = ensembl)
listFilters()
listFilters(ensembl)
#gets gene symbol, transcript_id and go_id for all genes annotated with GO:0007507
gene.data <- getBM(attributes=c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go', values = 'GO:0005739', mart = ensembl)
gene.data
head(gene.data)
mito.gene <- unique(gene.data$hgnc_symbol)
mito.mut <- mut[mut$gene %in% mito.gene,]
head(mito.mut )
dim(mito.mut)
dim(mut)
table(mito.mut$Sample_ID)
length(unique(mut))
length(unique(mut$Sample_ID))
length(unique(mito.mut$Sample_ID))
table(mito.mut$chrom)
length(unique(mut$Sample_ID))
# [1] 436
length(unique(mito.mut$Sample_ID))
length(unique(mut$Sample_ID))
dim(mito.mut)
dim(mut)
write.csv(mito.mut, "../data/TCGA-OV.mutect2_snv_mito.csv")
write.table(mito.mut, "../data/TCGA-OV.mutect2_snv_mito.txt", sep = "/t", quote = F)
write.table(mito.mut, "../data/TCGA-OV.mutect2_snv_mito.txt", sep = "\t", quote = F)
write.table(mito.mut, "../data/TCGA-OV.mutect2_snv_mito.txt", sep = "\t", quote = F, row.names = F)
filenames <- list.files("~/TCGA/")
filenames
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl") #uses human ensembl annotations
listFilters(ensembl)
#gets gene symbol, transcript_id and go_id for all genes annotated with GO:0007507
gene.data <- getBM(attributes=c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go', values = 'GO:0005739', mart = ensembl)
head(gene.data)
mito.gene <- unique(gene.data$hgnc_symbol)
itor=1
data <- read.delim2(file = paste("~/TCGA/", filenames[itor], sep = ""), as.is = T)
head(data)
head(gene.data)
mito.gene <- unique(gene.data$hgnc_symbol)
mito.mut <- data[mut$datae %in% mito.gene,]
mito.mut <- data[data$gene %in% mito.gene,]
dim(mito.mut)
mito.mut
table(mito.mut$filter)
table(mito.mut$effect)
table(mito.mut$dna_vaf)
mut_type <- c("frameshift_variant","inframe_deletion","inframe_insertion","missense_variant",
"missense_variant;splice_region_variant","protein_altering_variant","splice_acceptor_variant","splice_donor_variant")
data$Sample_ID <- as.factor(data$Sample_ID)
mito.mut <- data[data$gene %in% mito.gene,]
mito.mut <- mito.mut[mito.mut$filter == "PASS" & mito.mut$effect %in% mut_type,]
table( mito.mut)
table( mito.mut$Sample_ID)
filenames[itor]
strsplit(filenames[itor], "[.]")
strsplit(filenames[itor], "[.]")[[1]][1]
table(mito.mut$chrom)
freq <- table(mito.mut)
freq <- table(mito.mut$Sample_ID)
for(itor in 1:length(filenames)){
data <- read.delim2(file = paste("~/TCGA/", filenames[itor], sep = ""), as.is = T)
data$Sample_ID <- as.factor(data$Sample_ID)
mito.mut <- data[data$gene %in% mito.gene,]
mito.mut <- mito.mut[mito.mut$filter == "PASS" & mito.mut$effect %in% mut_type,]
freq <- table(mito.mut$Sample_ID)
df_tmp <- data.frame(cancer.type = strsplit(filenames[itor], "[.]")[[1]][1],
freq = freq,
sample_ID =names(freq))
if(itor == 1) {
df <- df_tmp
} else {
df <- rbind(df, df_tmp)
}
}
df
freq
library(ggplot2)
head(df)
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter()
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter() + coord_flip() + theme_classic()
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter(alpha = 0.4) + coord_flip() + theme_classic()
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter(alpha = 0.4) + coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations")
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter(alpha = 0.4) + coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample")
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter(alpha = 0.4) + geom_violin()+coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample")
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +scale_y_continuous(trans='log2')
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +scale_y_continuous(trans='log1p')
ggplot(df, aes(x = cancer.type, y = freq.Freq)) + geom_jitter(alpha = 0.4)+geom_violin() +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +scale_y_continuous(trans='log1p')
ggplot(df, aes(x = cancer.type, y = freq.Freq))+geom_violin() + geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +scale_y_continuous(trans='log1p')
ggplot(df, aes(x = cancer.type, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample")
acronym <- read.delim2(header = F, file = "~/TCGA/acronym_list.txt")
acronym
acronym$V1 <- gsub(pattern = "GDC TCGA ", replacement = "", x = acronym$V1)
acronym
head(df)
df$cancer.type <- gsub(pattern = "TCGA-", replacement = "", x = df$cancer.type)
df$cancer <- acronym$V1[match(df$cancer.type, acronym$V2)]
df$cancer
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample")
ggsave("plot/jitters_pancan_fullName.png", width = 6, height = 7, dpi = 300)
ggsave("plot/jitters_pancan_fullName.png", width = 11, height = 9, dpi = 300)
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.title.x = element_text(size = 12))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.title.x = element_text(size = 16))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.title.y = element_text(size = 12))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text.y  = element_text(size = 12))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text  = element_text(size = 12), axis.title = element_text(size = 16))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggsave("plot/jitters_pancan_fullName.png", width = 11, height = 9, dpi = 300)
ggsave("plot/jitters_pancan_fullName.png", width = 20, height = 9, dpi = 300)
ggplot(df, aes(x = cancer, y = freq.Freq, fill = cancer))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df, aes(x = cancer, y = freq.Freq, col = cancer))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggsave("plot/jitters_pancan_fullName.png", width = 11, height = 9, dpi = 300)
ggsave("plot/jitters_pancan_fullName.png", width = 11, height = 11, dpi = 300)
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.6) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") + theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggsave("plot/jitters_pancan_fullName.png", width = 11, height = 14, dpi = 300)
ggsave("plot/jitters_pancan_fullName.png", width = 14, height = 12, dpi = 300)
length(unique(df$cancer.type))
split(df, cancer)
split(df, df$cancer)
df_splite <- split(df, df$cancer)
df_split <- split(df, df$cancer)
df_split[1]
freq.Freq
sapply(df_split, function(x) return(mean(x$freq.Freq)))
order(sapply(df_split, function(x) return(mean(x$freq.Freq))))
dim(df)
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16), panel.border = element_rect(colour = "black"))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16), panel.border = element_rect(colour = "black"))
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16), panel.border = element_rect(colour = "black", fill = NULL))
ggplot(df, aes(x = cancer, y = freq.Freq)) +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16), panel.border = element_rect(colour = "black", fill = NULL))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample")
dim(df)
dim(df)
head(df)
df
sum(df$freq.Freq)
library(ggplot2)
### GO - mitochondian
## retrieve gene list
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl") #uses human ensembl annotations
listFilters(ensembl)
#gets gene symbol, transcript_id and go_id for all genes annotated with GO:0007507
gene.data <- getBM(attributes=c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go', values = 'GO:0005739', mart = ensembl)
head(gene.data)
mito.gene <- unique(gene.data$hgnc_symbol)
filenames <- list.files("~/TCGA/")
mut_type <- c("frameshift_variant","inframe_deletion","inframe_insertion","missense_variant",
"missense_variant;splice_region_variant","protein_altering_variant","splice_acceptor_variant","splice_donor_variant")
for(itor in 1:length(filenames)){
data <- read.delim2(file = paste("~/TCGA/", filenames[itor], sep = ""), as.is = T)
data$Sample_ID <- as.factor(data$Sample_ID)
mito.mut <- data[data$gene %in% mito.gene,]
mito.mut <- mito.mut[mito.mut$filter == "PASS" & mito.mut$effect %in% mut_type,]
freq <- table(mito.mut$Sample_ID)
df_tmp <- data.frame(cancer.type = strsplit(filenames[itor], "[.]")[[1]][1],
freq = freq,
sample_ID =names(freq))
if(itor == 1) {
df <- df_tmp
} else {
df <- rbind(df, df_tmp)
}
}
head(df)
acronym <- read.delim2(header = F, file = "~/TCGA/acronym_list.txt")
acronym$V1 <- gsub(pattern = "GDC TCGA ", replacement = "", x = acronym$V1)
df$cancer.type <- gsub(pattern = "TCGA-", replacement = "", x = df$cancer.type)
df$cancer <- acronym$V1[match(df$cancer.type, acronym$V2)]
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
# ggsave("plot/jitters_pancan_fullName.png", width = 14, height = 12, dpi = 300)
df_split <- split(df, df$cancer)
sapply(df_split, function(x) return(mean(x$freq.Freq)))
sum(df$freq.Freq)
library(ggplot2)
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl") #uses human ensembl annotations
gene.data <- getBM(attributes=c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go', values = 'GO:0005739', mart = ensembl)
mito.gene <- unique(gene.data$hgnc_symbol)
filenames <- list.files("~/TCGA/")
filenames
filenames <- list.files("~/TCGA/*tsv")
filenames
filenames <- list.files("~/TCGA/", pattern = "*.tsv")
filenames
## Mutation types we will use
mut_type <- c("frameshift_variant","inframe_deletion","inframe_insertion","missense_variant",
"missense_variant;splice_region_variant","protein_altering_variant","splice_acceptor_variant","splice_donor_variant")
for(itor in 1:length(filenames)){
data <- read.delim2(file = paste("~/TCGA/", filenames[itor], sep = ""), as.is = T)
data$Sample_ID <- as.factor(data$Sample_ID)
mito.mut <- data[data$gene %in% mito.gene,]
mito.mut <- mito.mut[mito.mut$filter == "PASS" & mito.mut$effect %in% mut_type,]
freq <- table(mito.mut$Sample_ID)
df_tmp <- data.frame(cancer.type = strsplit(filenames[itor], "[.]")[[1]][1],
freq = freq,
sample_ID =names(freq))
if(itor == 1) {
df <- df_tmp
} else {
df <- rbind(df, df_tmp)
}
}
head(df)
# Calculate the number of mito mutations
for(itor in 1:length(filenames)){
data <- read.delim2(file = paste("~/TCGA/", filenames[itor], sep = ""), as.is = T)
data$Sample_ID <- as.factor(data$Sample_ID)
mut <- data
mut <- mut[mut$filter == "PASS" & mut$effect %in% mut_type,]
mito.mut <- data[data$gene %in% mito.gene,]
mito.mut <- mito.mut[mito.mut$filter == "PASS" & mito.mut$effect %in% mut_type,]
freq_all <- table(mut$Sample_ID)
freq <- table(mito.mut$Sample_ID)
df_tmp <- data.frame(cancer.type = strsplit(filenames[itor], "[.]")[[1]][1],
mito_freq = freq,
mut_freq = freq_all,
sample_ID =names(freq))
if(itor == 1) {
df <- df_tmp
} else {
df <- rbind(df, df_tmp)
}
}
head(df)
acronym <- read.delim2(header = F, file = "~/TCGA/acronym_list.txt")
acronym$V1 <- gsub(pattern = "GDC TCGA ", replacement = "", x = acronym$V1)
df$cancer.type <- gsub(pattern = "TCGA-", replacement = "", x = df$cancer.type)
df$cancer <- acronym$V1[match(df$cancer.type, acronym$V2)]
(df
）
df
head(df_split)
head(df)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Var1)) + facet_grid(~cancer)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Var1)) + geom_point(alpha = 0.8)+facet_grid(~cancer)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Var1)) + geom_point(alpha = 0.8)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) + geom_point(alpha = 0.8)+facet_grid(~cancer)
table(df$cancer)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) + geom_point(alpha = 0.8)+facet_grid(~cancer, cols = 6)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) + geom_point(alpha = 0.8)+facet_grid(~cancer,ncol = 6)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) + geom_point(alpha = 0.8)+facet_wrap(~cancer,ncol = 6)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) + geom_point(alpha = 0.8)+facet_wrap(~cancer,ncol = 6) +theme_classic()
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) + geom_point(alpha = 0.8)+facet_wrap(~cancer,ncol = 6, scales = "free") +theme_classic()
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) + geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +theme_classic()
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) +
geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +
theme_classic() + xlab("Frequency of somatic mutations") +
ylab("Frequency of somatic mitochondial-located mutations")
ggsave("plot/scatter_plot_pancan.png", height = 10, width = 10)
ggsave("plot/scatter_plot_pancan.png", height = 12, width = 12)
table(data$chrom)
cor.test
cor.test(df$mut_freq.Freq, df$mito_freq.Freq)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) +
geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +
theme_classic() + xlab("Frequency of somatic mutations") + xlim(0,200)
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) +
geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +
theme_classic() + xlab("Frequency of somatic mutations") + xlim(0,200) + ylim(0,25) +
ylab("Frequency of somatic mitochondial-located mutations")
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) +
geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +
theme_classic() + xlab("Frequency of somatic mutations") + xlim(0,200) + ylim(0,25) +
ylab("Frequency of somatic mitochondial-located mutations")
df$percentage <- df$mito_freq.Freq/df$mut_freq.Freq
hist(df$percentage)
ggplot(df[df$mut_freq.Freq <= 200,], aes(x = cancer, y = percentage))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df[df$mut_freq.Freq <= 200,], aes(x = cancer, y = percentage))+ geom_violin()+
geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
mean(df$percentage)
ggplot(df, aes(x = cancer, y = percentage))+ geom_violin()+
geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df, aes(x = cancer, y = percentage))+ geom_violin()+
# geom_jitter(alpha = 0.4, size = 0.75) +
coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df, aes(x = cancer, y = percentage))+ geom_violin(scale = "width")+
# geom_jitter(alpha = 0.4, size = 0.75) +
coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
median(df$percentage[df$cancer == "Kidney Clear Cell Carcinoma"])
median(df$percentage[df$cancer != "Kidney Clear Cell Carcinoma"])
median(df$percentage[df$cancer != "Kidney Clear Cell Carcinoma"], na.rm = T)
df_filtered <- df[df$mut_freq.Freq <= 200,]
median(df_filtered$percentage[df_filtered$cancer == "Kidney Clear Cell Carcinoma"])
median(df_filtered$percentage[df_filtered$cancer != "Kidney Clear Cell Carcinoma"], na.rm = T)
median(df_filtered$percentage[df_filtered$cancer == "Low Grade Glioma"])
median(df_filtered$percentage[df_filtered$cancer == "Low Grade Glioma"], na.rm = T)
df_filtered$percentage[df_filtered$cancer == "Low Grade Glioma"]
df_filtered$percentage[df_filtered$cancer == "Lower Grade Glioma"]
median(df_filtered$percentage[df_filtered$cancer == "Lower Grade Glioma"], na.rm = T)
table(df_filtered$cancer)
ggplot(df_filtered, aes(x = cancer, y = percentage))+ geom_violin(scale = "width")+
# geom_jitter(alpha = 0.4, size = 0.75) +
coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df_filtered, aes(x = cancer, y = percentage))+ geom_violin(scale = "width")+
# geom_jitter(alpha = 0.4, size = 0.75) +
coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
library(ggplot2)
### GO - mitochondian
## retrieve gene list
library(biomaRt)
ggplot(df_filtered, aes(x = cancer, y = percentage))+ geom_violin(scale = "width")+
# geom_jitter(alpha = 0.4, size = 0.75) +
coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df_filtered, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) +
geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +
theme_classic() + xlab("Frequency of somatic mutations") + xlim(0,200) + ylim(0,25) +
ylab("Frequency of somatic mitochondial-located mutations")
ggplot(df_filtered, aes(x = mut_freq.Freq,  y = mito_freq.Freq)) +
geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +
theme_classic() + xlab("Frequency of somatic mutations") + xlim(0,200) + ylim(0,25) +
ylab("Frequency of somatic mitochondial-located mutations")
head(df_filtered)
dim(df_filtered)
library(ggplot2)
### GO - mitochondian
## retrieve gene list
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl") #uses human ensembl annotations
listFilters(ensembl)
#gets gene symbol, transcript_id and go_id for all genes annotated with GO:0007507
gene.data <- getBM(attributes=c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go', values = 'GO:0005739', mart = ensembl)
head(gene.data)
mito.gene <- unique(gene.data$hgnc_symbol)
filenames <- list.files("~/TCGA/", pattern = "*.tsv")
## Mutation types we will use
mut_type <- c("frameshift_variant","inframe_deletion","inframe_insertion","missense_variant",
"missense_variant;splice_region_variant","protein_altering_variant","splice_acceptor_variant","splice_donor_variant")
# Calculate the number of mito mutations
for(itor in 1:length(filenames)){
data <- read.delim2(file = paste("~/TCGA/", filenames[itor], sep = ""), as.is = T)
data$Sample_ID <- as.factor(data$Sample_ID)
mut <- data
mut <- mut[mut$filter == "PASS" & mut$effect %in% mut_type,]
mito.mut <- data[data$gene %in% mito.gene,]
mito.mut <- mito.mut[mito.mut$filter == "PASS" & mito.mut$effect %in% mut_type,]
freq_all <- table(mut$Sample_ID)
freq <- table(mito.mut$Sample_ID)
df_tmp <- data.frame(cancer.type = strsplit(filenames[itor], "[.]")[[1]][1],
mito_freq = freq,
mut_freq = freq_all,
sample_ID =names(freq))
if(itor == 1) {
df <- df_tmp
} else {
df <- rbind(df, df_tmp)
}
}
head(df)
acronym <- read.delim2(header = F, file = "~/TCGA/acronym_list.txt")
acronym$V1 <- gsub(pattern = "GDC TCGA ", replacement = "", x = acronym$V1)
df$cancer.type <- gsub(pattern = "TCGA-", replacement = "", x = df$cancer.type)
df$cancer <- acronym$V1[match(df$cancer.type, acronym$V2)]
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
load("~/OneDrive - OnTheHub - The University of Oxford/Project NGS/Enzo/OvCa_mt_mut/R/.RData")
ggplot(df, aes(x = df$mut_freq.Freq,  y = df$mito_freq.Freq)) +
geom_point(alpha = 0.4)+facet_wrap(~cancer,ncol = 6, scales = "free") +
theme_classic() + xlab("Frequency of somatic mutations") + xlim(0,200) + ylim(0,25) +
ylab("Frequency of somatic mitochondial-located mutations")
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
head(df)
df$cancer.type <- gsub(pattern = "TCGA-", replacement = "", x = df$cancer.type)
df$cancer <- acronym$V1[match(df$cancer.type, acronym$V2)]
ggplot(df, aes(x = cancer, y = freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
ggplot(df, aes(x = cancer, y = mito_freq.Freq))+ geom_jitter(alpha = 0.4, size = 0.75) +coord_flip() + theme_classic() +
xlab("") + ylab("Frequency of mutations per sample") +
theme(axis.text  = element_text(size = 14), axis.title = element_text(size = 16))
df
head(df_split)
df_split <- split(df, df$cancer)
sapply(df_split, function(x) return(mean(x$freq.Freq)))
split(df, df$cancer)
df_split <- split(df, df$cancer)
sapply(df_split, function(x) return(mean(x$mito_mut_freq.Freq)))
sapply(df_split, function(x) return(mean(x$mito_freq.Freq)))
as.data.frame(sapply(df_split, function(x) return(mean(x$mito_freq.Freq))))
write.csv(as.data.frame(sapply(df_split, function(x) return(mean(x$mito_freq.Freq)))),"average_mito_mut.csv")
list.files("~/TCGA/", pattern = "*.tsv")
table(df$cancer.type)
head(df)
write.csv(df, "Mut_counts_by_patients.csv", row.names = F)
unique(df$cancer)
paste(unique(df$cancer), collapse = ", ")
table
table(df$cancer.type)
head(df_tmp)
head(data)
head(mut)
filenames
tmp <- read.delim2("~/TCGA/TCGA.UVM.mutect.6c7b01bc-b068-4e01-8b4d-0362f5959f65.DR-10.0.somatic.maf", as.is = T)
tmp <- read.delim2("~/TCGA/TCGA.UVM.mutect.6c7b01bc-b068-4e01-8b4d-0362f5959f65.DR-10.0.somatic.maf", as.is = T, skip = 4)
tmp <- read.delim2("~/TCGA/TCGA.UVM.mutect.6c7b01bc-b068-4e01-8b4d-0362f5959f65.DR-10.0.somatic.maf", as.is = T, skip = 5)
head(tmp)
table(tmp$FILTER)
dim(df_tmp)
dim(mut)
sum(tmp$FILTER == "PASS" & tolower(tmp$Variant_Classification) %in% mut_type)
sum(tmp$FILTER == "PASS" & tolower(tmp$Variant_Type) %in% mut_type)
sum(tmp$FILTER == "PASS" & tolower(tmp$One_Consequence) %in% mut_type)
sum(tmp$FILTER == "PASS" & tolower(tmp$One_Consequence) %in% mut_type & substr(tmp$Tumor_Sample_Barcode, 1, 16) %in% mut$Sample_ID)
sum(tmp$FILTER == "PASS" & tolower(tmp$One_Consequence) %in% mut_type & tmp$Gene %in% mito.gene)
head(tmp$Gene)
head(mito.gene)
sum(tmp$FILTER == "PASS" & tolower(tmp$One_Consequence) %in% mut_type & tmp$Hugo_Symbol %in% mito.gene)
dim(mito.mut)
paste(mut_type, collapse = ", ")
gsub("_", " ",paste(mut_type, collapse = ", "))
df
write.csv(data.frame(table(df$cancer)), "patient_number_by_cancer_types.csv")
